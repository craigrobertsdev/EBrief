npx tailwindcss -i .\wwwroot\css\app.css -o .\wwwroot\css\output.css --watch

FUNCTIONALITY:
	- Work out logging
		* Add logging to all catch blocks
		* Add logging to data access 
		* Add logging to file service
	- Search function for case files by either case file or courtfile number
	- Add option to refresh local data from server
	- Find a way to handle where files are double clicked when the user already has the app open
		https://www.codeproject.com/Articles/5247406/Double-Clicking-a-File-in-Explorer-and-Adding-It-t
	- Handle situation where there is no network connection, so the updates will need to be sent later when its back
		* research the outbox pattern
	- Use cancellation tokens to cancel requesting both court lists and documents
	- Add all courts to the list of courts
	- Think of a way to represent regional courts where they only have 1 court room
	- Implement OAuth2
	- Add auth tokens and use them to send requests and populate user data for CFEL updates:
		* CaseFileEnquiryLogEntry constructor needs to accept a user rather than a string
		* Follow ups page needs to be updated to use the user

	- Remove ID hack from parser. This is to allow defendants to have different ids by the time they reach the database so more than 1 defendant has case files against them

STYLING:
	- Add colour coding for whether notes have been added to the case file
	- Go through every date and time and format them consistently
	- When expanding a court session, make scroll snap to the botton of the newly opened session, or as far down as possible if the session is too long
	- OpenPreviousCourtList - create grid for each element of CourtListEntry (date, court code, court room)
	- Colour palette!
	
TESTING:
	- Add tests for models and data access where it makes sense

NICE TO HAVES:
	- Keyboard shortcuts
	- Help popup with shortcuts and other info
	- Progress indicator when getting data from the server
