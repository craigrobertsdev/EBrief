npx tailwindcss -i .\wwwroot\css\app.css -o .\wwwroot\css\output.css --watch

FUNCTIONALITY:
	- Checking if there are changes when exiting doesn't work.
	- Changing the case file doesn't cause the document to reload in the occurrence documents.
	- Work out logging
		* Add logging to all catch blocks
	- Search function for case files by either case file or courtfile number
	- Add option to refresh local data from server
	- Find a way to handle where files are double clicked when the user already has the app open
		https://www.codeproject.com/Articles/5247406/Double-Clicking-a-File-in-Explorer-and-Adding-It-t
	- Add Extra info page for time in custody, defendant's details, etc.
	- Update CFELs on server and on client optimistically
	- Handle situation where there is no network connection, so the updates will need to be sent later when its back
	- Use cancellation tokens to cancel requesting both court lists and documents
	- PreviousCourtList delete button not disabled when there is no court list is selected
	- Add all courts to the list of courts
	- Think of a way to represent regional courts where they only have 1 court room
	- What kind of auth do we use?

STYLING:
	- Add colour coding for whether notes have been added to the case file
	- Add groups to defendants list to put them in hearing slots (both hearing time and additions/custodies)
	- Go through every date and time and format them consistently
	- Add transition to opening and closing of tree view sections
	- Add visual indicator that tree view section is open (like an arrow to the right that turns down when open)
	- Add border (maybe) to the top of the second and onwards tree view sections to separate them from the previous section
	- Put "loading" on home page in the middle of the screen
	
TESTING:
	- Add tests for models and data access where it makes sense

NICE TO HAVES:
	- Keyboard shortcuts
	- Help popup with shortcuts and other info
	- Progress indicator when getting data from the server

DECISION LOG:
	Options for storing court lists:
	1. Single court list stored in a local database
	2. Multiple court lists stored in a local database, locatable by date and court room - there will need to be a way to
	   select which court list to use
	3. Multiple court lists both stored in a local database and able to be exported to a file to enable sharing

	Chose option 3.


