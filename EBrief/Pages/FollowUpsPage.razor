@using EBrief.Models.UI
@implements IDisposable

<div class="flex flex-col flex-grow gap-6 pb-4">
    <div>
        <h3 class="text-lg pb-2">Select case files to update</h3>
        <input type="checkbox" 
        <RadzenCheckBoxList Data="CaseFiles" @bind-Value=@SelectedCaseFiles TextProperty="CaseFileNumber"
                            ValueProperty="CaseFileNumber" Orientation="Orientation.Horizontal" Style="font-weight: bold;" />
    </div>
    @* Create task section *@
    <div class="pb-4">
        @* Should be a flex box with the text section and case files side-by-side *@
        <h3 class="text-lg pb-2">Create follow up task</h3>
        <textarea placeholder="Enter task remarks here..." @bind=Parent.ActiveDefendant!.ActiveCaseFile!.FollowUpText
                  class="block mb-2 w-1/2 p-2 border border-black" rows="10" />
        <RadzenButton Text="Create follow up task" />
    </div>
    @* CFEL section *@
    <div>
        <h3 class="text-lg pb-2">Enter text to add to all selected case files' CFELs</h3>
        <textarea name="cfel-entry" id="cfel-entry" @bind="@Parent.ActiveDefendant!.CfelText" class="block mb-2 w-1/2 p-2 border border-black" rows="10" />
        <RadzenButton Text="Update CFELs" />
    </div>
</div>

@code {
    [CascadingParameter] public CourtListPage Parent { get; set; } = default!;
    public string? RemarksText { get; set; }
    public string? CfelText { get; set; }
    public IEnumerable<string> SelectedCaseFiles { get; set; } = [];
    public List<CaseFile> CaseFiles { get; set; } = [];

    protected override async Task OnInitializedAsync() {
        Parent.OnDefendantChange += HandleDefendantChange;
        await HandleDefendantChange();
    }

    public async Task HandleDefendantChange() {
        await Task.CompletedTask;
        if (Parent?.ActiveDefendant?.CaseFiles is not null) {
            CaseFiles = Parent.ActiveDefendant.CaseFiles;
        }
    }

    public void Dispose() {
        CaseFiles = null!;
        SelectedCaseFiles = null!;
        Parent.OnDefendantChange -= HandleDefendantChange;
    }
}