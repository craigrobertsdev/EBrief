@page "/"
@using EBrief.Shared.Components
@using EBrief.Shared.Models
@using System.IO
@using EBrief.Shared.Models.Shared

@inject IJSRuntime JSRuntime
@inject NavigationManager NavManager

<div class="h-full grid grid-rows-[1fr,_25px]">
    <div class="w-full h-full flex flex-col grow justify-center items-center">
        <div class="pb-4 text-2xl">
            <h1>Choose an option to get started</h1>
        </div>
        <div class="grid grid-cols-3 gap-3">
            <Button Variant="ButtonTypes.Submit" OnClick="OpenNewCourtListDialog">
                Add New Court List
            </Button>
            <Button Variant="ButtonTypes.Submit" OnClick="OpenPreviousCourtListDialog">
                Load Previous Court List
            </Button>
            <Button Variant="ButtonTypes.Submit" OnClick="LoadCourtListFromFile">
                Open Court List From File
            </Button>
        </div>

        @if (_error is not null)
        {
            <div class="pt-2 text-left">
                <p class="text-red-500">@_error</p>
            </div>
        }
    </div>
    <p class="text-right pr-2">&copy; Craig Roberts 2024</p>
</div>

<dialog id="new-court-list" @ref="NewCourtListDialog" class="p-5 w-[750px] h-[430px]">
    @if (!EnterManually)
    {
        <h3 class="text-lg font-semibold text-center pb-2 underline">Select a landscape list to load</h3>
        <div class="grid grid-cols-[0.6fr_1fr] gap-4 pt-2 pb-4 w-lg max-w-lg m-auto items-center">
            <Button Variant="ButtonTypes.Submit" OnClick="async () => await SelectFile()" Disabled="@(_loadingCourtList || EnterManually)">Choose a file</Button>
            <div class="border border-black rounded-md p-1 overflow-hidden h-9 @(EnterManually ? "bg-gray-200 text-gray-200" : "")">
                @if (SelectedFile is null)
                {
                    <span class="font-semibold ">No file selected</span>
                }
                else
                {
                    <span class="font-semibold whitespace-nowrap text-clip">@Path.GetFileName(SelectedFile)</span>
                }
            </div>

            <p class="text-lg text-center pb-2">Select a court room</p>
            <select value="@CourtListBuilder.CourtRoom" @onchange=HandleSelectCourtRoom class="border border-black p-2 rounded-md disabled:bg-gray-200" disabled="@(LandscapeList == null || EnterManually)">
                <option selected hidden disabled></option>
                @if (LandscapeList is not null)
                {
                    foreach (var courtRoom in LandscapeList.Select(cl => cl.CourtRoom))
                    {
                        <option value="@courtRoom">@courtRoom</option>
                    }
                }
            </select>
            <p class="text-lg text-center pb-2">Include documents?</p>
            <select @onchange="HandleIncludeDocuments" class="border border-black p-2 rounded-md">
                <option value="true">Yes</option>
                <option selected value="false">No</option>
            </select>
        </div>
    }
    else
    {
        <h3 class="text-lg font-semibold text-center pb-2 underline">Enter details of court list</h3>
        <div class="grid grid-cols-[1fr_0.8fr] gap-4 pb-2">
            <div class="col-start-1 grid grid-cols-2 items-center gap-x-4">
                <label class="ml-auto text-lg">Court date </label>
                <input type="date" @bind-value="@CourtListBuilder.CourtDate" class="border border-black rounded-md p-1 disabled:bg-gray-200" />
                <label class="ml-auto text-lg">Court code </label>
                <select value="@CourtListBuilder.CourtCode" @oninput="HandleSelectCourt" class="border border-black p-2 rounded-md disabled:bg-gray-200">
                    <option selected hidden disabled></option>
                    @foreach (var courtCode in Courts.Select(c => c.CourtCode))
                    {
                        <option value="@courtCode">@courtCode</option>
                    }
                </select>
                <label class="ml-auto text-lg">Court room</label>
                <input value="@CourtListBuilder.CourtRoom" @oninput=HandleEnterCourtRoom class="border border-black p-2 rounded-md disabled:bg-gray-200" />
                <label class="ml-auto text-lg">Include documents</label>
                <select @onchange="HandleIncludeDocuments" class="border border-black p-2 rounded-md">
                    <option value="true">Yes</option>
                    <option selected value="false">No</option>
                </select>
            </div>
            <div class="w-full col-start-2 row-start-1">
                <textarea value="@CaseFileNumbers" @oninput="HandleEnterCaseFileNumbers" rows="8" placeholder="Enter case file numbers here" class="w-full p-2 border border-slate-500 rounded-md resize-none disabled:bg-gray-200" />
            </div>
        </div>
    }

    @if (_loadNewCourtListError is not null)
    {
        foreach (var line in _loadNewCourtListError.Split('\n'))
        {
            <p class="col-span-2 pb-2 text-center text-lg text-red-500">@line</p>
        }
    }

    <div class="flex w-full col-span-2 justify-center gap-6 pb-4">
        <Button Variant="ButtonTypes.Add" OnClick="SubmitNewCourtListForm" Disabled="@(_loadingCourtList || !NewCourtListParametersAreValid())">
            Confirm
        </Button>
        <Button Variant="ButtonTypes.Cancel" OnClick="CloseLoadNewCourtListDialog">
            Cancel
        </Button>
        <Button Variant="ButtonTypes.Submit" OnClick="@(ToggleManualCourtListEntry)">
            @(EnterManually ? "Create with landscape list" : "Enter manually?")
        </Button>
    </div>

    <div class="text-center pb-4">
    </div>
</dialog>

<dialog @ref="PreviousCourtListDialog" class="p-5">
    <h3 class="text-lg text-center pb-2">Choose from a previous court list</h3>
    @if (PreviousCourtListEntries is null)
    {
        <Radzen.Blazor.RadzenProgressBarCircular Mode="Radzen.ProgressBarMode.Indeterminate" ShowValue=false />
    }
    else
    {
        <div class="border border-black mb-2 w-[300px] h-[300px]">
            @if (PreviousCourtListEntries!.Count == 0)
            {
                <div class="h-full w-full flex items-center justify-center">
                    <h3 class="text-center text-lg pb-2">No court previous court lists found</h3>
                </div>
            }
            else
            {
                @foreach (var courtList in PreviousCourtListEntries!)
                {
                    <div class="flex justify-between border-b border-black font-medium select-none @(courtList == SelectedCourtListEntry ? "bg-blue text-text hover:bg-blue hover:text-primary" : "hover:bg-slate-300 hover:text-black ")">
                        <p class="text-lg text-center p-1 flex-grow cursor-default"
                           @onclick=@(() => HandleSelectCourtListEntry(courtList))>
                            @courtList.CourtDate.ToShortDateString() - @courtList.CourtCode Court @courtList.CourtRoom
                        </p>
                    </div>
                }
            }
        </div>

    }
    <div class="flex w-full justify-center gap-3">
        @if (PreviousCourtListEntries?.Count != 0)
        {
            <Button Variant="ButtonTypes.Add" OnClick="LoadPreviousCourtList">
                Confirm
            </Button>
        }
        <Button Variant="ButtonTypes.Cancel" OnClick="ClosePreviousCourtListDialog">
            Cancel
        </Button>
        @if (PreviousCourtListEntries?.Count != 0)
        {
            <Button Variant="ButtonTypes.Delete" OnClick="OpenConfirmDialog" Disabled=@(SelectedCourtListEntry == null)>
                Delete
            </Button>
        }
    </div>
</dialog>

<dialog @ref=ConfirmDialog class="p-5">
    <p class="text-lg text-center pb-2">Are you sure you want to delete this court list?</p>
    <div class="flex justify-center gap-3">
        <Button OnClick="async () => await DeletePreviousCourtList(true)">
            Yes
        </Button>
        <Button Variant="ButtonTypes.Cancel" OnClick="async () => await DeletePreviousCourtList(false)">
            No
        </Button>
    </div>
</dialog>
