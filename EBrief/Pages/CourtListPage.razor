@page "/court-list"

@using EBrief.Shared.Components
@using EBrief.Shared.Models.UI
@using EBrief.Shared.Pages
@using Radzen
@using Radzen.Blazor
@using System.Text
@inject IJSRuntime JSRuntime
@inject NavigationManager NavManager

@if (_error is not null)
{
    <p>@_error</p>
    <Button OnClick="HandleReturnHome">
        Back to start
    </Button>
}

else if (_loading)
{
    <div class="w-full h-full flex justify-center items-center">
        <RadzenProgressBarCircular Mode="ProgressBarMode.Indeterminate" ShowValue=false />
    </div>
}
else
{
    <CascadingValue Value="this">
        <div class="h-full grid @(ColWidth) laptop:grid-cols-[300px_1fr] grid-rows-[auto_1fr] pt-2">
            @* Defendant column *@
            <div id="defendant-container"
                 class="row-span-2 overflow-auto max-h-full pl-2 @(MenuCollapsed ? "w-20" : "")">
                @* <Button OnClick="ToggleMenuCollapse">@(MenuCollapsed ? "Expand" : "Collapse")</Button> *@
                <div class="flex flex-col mr-2 h-full">
                    <TreeView CourtSittings="AppState.CourtSittings"/>
                </div>
            </div>
            @if (ActiveDefendant is null)
            {
                <div class="pb-2">
                </div>
            }
            else
            {
                // Case files row
                <div class="grid grid-cols-[1fr_auto] gap-6 mb-2 pr-4 flex ml-2 justify-between max-w-full relative">
                    <div id="casefile-container" class="overflow-x-auto">
                        <div class="flex w-auto w-full first:border-l first:border-slate-500">
                            @foreach (var casefile in ActiveDefendant.Casefiles)
                            {
                                <Tooltip Text="@GenerateCasefileTooltipText(casefile)" Id="@casefile.CasefileNumber">
                                    <div class="border-r border-t border-b border-slate-500 font-normal min-w-[18ch] text-center text-sm laptop:text-base
                                        @(IsSelected(casefile) ? _casefileSelected : _casefileNotSelected)"
                                         @onclick="() => CasefileChanged(casefile)">
                                        <p class="select-none">
                                            @casefile.CasefileNumber
                                        </p>
                                        <p class="select-none">
                                            @casefile.CourtFileNumber
                                        </p>
                                    </div>
                                </Tooltip>
                            }
                        </div>
                    </div>

                    @* Court List Menu *@
                    <div class="max-w-2xl flex items-center">
                        <DropdownMenu Text="Menu">
                            <DropdownMenuItem Text="Save" OnClick="SaveCourtList"/>
                            <DropdownMenuItem Text="Add Case Files" OnClick="OpenAddCasefilesDialog"/>
                            <DropdownMenuItem Text="Refresh Data" OnClick="RefreshData"/>
                            <DropdownMenuItem Text="Export Court List" OnClick="ExportCourtList"/>
                            <DropdownMenuItem Text="Return Home" OnClick="HandleReturnHome"/>
                        </DropdownMenu>
                    </div>
                </div>
            }
            <div class="h-full ml-2">
                <TabControl>
                    <TabPage Title="CFEL">
                        <CfelPage/>
                    </TabPage>
                    <TabPage Title="Information">
                        <InformationPage/>
                    </TabPage>
                    <TabPage Title="Facts of Charge">
                        <FactsOfChargePage/>
                    </TabPage>
                    <TabPage Title="Offender History">
                        <OffenderHistoryPage/>
                    </TabPage>
                    <TabPage Title="Correspondence">
                        <CorrespondencePage/>
                    </TabPage>
                    <TabPage Title="Evidence">
                        <EvidencePage/>
                    </TabPage>
                    <TabPage Title="Orders">
                        <OrdersPage/>
                    </TabPage>
                    <TabPage Title="Additional Info">
                        <AdditionalInfoPage/>
                    </TabPage>
                    <TabPage Title="Schedule">
                        <SchedulePage/>
                    </TabPage>
                    <TabPage Title="Follow-Ups">
                        <FollowUpsPage/>
                    </TabPage>
                    <TabPage Title="Notes">
                        <NotesPage/>
                    </TabPage>
                </TabControl>
            </div>
        </div>
    </CascadingValue>
}

<dialog @ref="_unsavedChangesDialog" class="p-5">
    <h3 class="text-lg pb-2">You have unsaved changes. Do you want to save them before returning home?</h3>
    <div class="flex w-full justify-center gap-3">
        <RadzenButton Text="Yes" Click="SaveChanges"/>
        <RadzenButton Text="No" Click="ReturnHome"/>
        <RadzenButton Text="Cancel" Click="CloseUnsavedChangesDialog"/>
    </div>
</dialog>

<dialog @ref="_addCasefilesDialog" class="p-5">
    @if (_loadingNewCasefiles)
    {
        <RadzenProgressBarCircular Mode="ProgressBarMode.Indeterminate" ShowValue=false/>
    }
    else
    {
        <h3 class="text-lg text-center pb-2">
            Enter the case file numbers you want to add, separated by a space or new line
        </h3>
        <div class="w-full pb-4">
            <textarea @bind="@CasefilesToAdd" rows="10"
                      class="w-full p-2 border border-slate-500 rounded-md resize-none"/>
        </div>
        <div class="flex w-full justify-end gap-3 pb-2">
            <RadzenButton Text="Add" Click="AddCasefiles"/>
            <RadzenButton Text="Close" ButtonType="ButtonType.Reset" Click="CloseAddCasefilesDialog"/>
        </div>

        @if (_addCasefilesError is not null)
        {
            <p class="text-red-500 text-center text-lg">@_addCasefilesError</p>
        }
    }
</dialog>

<dialog @ref="_searchDialog" id="search-dialog" class="p-2 border border-gunmetal w-[400px]">
    <h1 class="text-lg font-semibold">Search by Case file or Court file number</h1>
    <input id="search-field" class="border border-gunmetal w-full p-1" @oninput="SearchCasefiles"/>
    <ul>
        @foreach (var result in SearchResults)
        {
            <li class="border-b border-gunmetal" @onclick="@(() => SelectSearchResult(result.Casefile))">
                <p class="font-semibold text-center">@result.Casefile.Defendant.FullName</p>
                @if (result.Casefile.CasefileNumber.ToLower().Contains(result.SearchQuery))
                {
                    <div class="flex justify-around">
                        <span class="font-bold">@result.Casefile.CasefileNumber</span>
                        @if (result.Casefile.CourtFileNumber is not null)
                        {
                            <span>@result.Casefile.CourtFileNumber</span>
                        }
                    </div>
                }
                else
                {
                    <p class="font-bold">@result.Casefile.CourtFileNumber</p>
                    <p>@result.Casefile.CasefileNumber</p>
                }
            </li>
        }
    </ul>
</dialog>

@code {
    private bool MenuCollapsed { get; set; }
    private string ColWidth => MenuCollapsed ? "grid-cols-[auto_1fr]" : "grid-cols-[225px_1fr]";

    private MarkupString GenerateCasefileTooltipText(Casefile casefile)
    {
        var markup = new StringBuilder();
        int maxCharges = 4;

        if (casefile.Charges.Count > maxCharges)
        {
            markup.Append($"<p class=\"pb-2 text-sm\">{casefile.Charges.Count} total charges</p>");
        }

        foreach (var (charge, i) in casefile.Charges.Take(maxCharges).Select((c, i) => (c, i)))
        {
            if (i == maxCharges)
            {
                markup.Append($"<p>{i + 1}. {charge.Date:d}: {charge.Name}</p>");
            }
            else
            {
                markup.Append($"<p class=\"pb-2\">{i + 1}. {charge.Date:d}: {charge.Name}</p>");
            }
        }

        return new MarkupString(markup.ToString());
    }

    private void ToggleMenuCollapse()
    {
        MenuCollapsed = !MenuCollapsed;
    }

}
