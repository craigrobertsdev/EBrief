// <auto-generated />
using System;
using EBrief.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EBrief.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("EBrief.Shared.Models.Data.CaseFileDocumentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaseFileModelCaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseFileModelCaseFileNumber");

                    b.ToTable("CaseFileDocumentModel");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.CaseFileEnquiryLogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaseFileModelCaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnteredBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntryText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseFileModelCaseFileNumber");

                    b.ToTable("CaseFileEnquiryLogModel");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.CaseFileModel", b =>
                {
                    b.Property<string>("CaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CourtFileNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CourtListModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefendantId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FactsOfCharge")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("InformationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CaseFileNumber");

                    b.HasIndex("CourtListModelId");

                    b.HasIndex("DefendantId");

                    b.HasIndex("InformationId");

                    b.ToTable("CaseFiles");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.ChargeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaseFileModelCaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChargeWording")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sequence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VictimName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseFileModelCaseFileNumber");

                    b.ToTable("ChargeModel");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.CourtListModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CourtLists");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.DefendantModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DefendantModel");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.HearingEntryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppearanceType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CaseFileModelCaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HearingDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseFileModelCaseFileNumber");

                    b.ToTable("HearingEntryModel");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.InformationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("InformationModel");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.OccurrenceDocumentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaseFileModelCaseFileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseFileModelCaseFileNumber");

                    b.ToTable("OccurrenceDocumentModel");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.CaseFileDocumentModel", b =>
                {
                    b.HasOne("EBrief.Shared.Models.Data.CaseFileModel", null)
                        .WithMany("CaseFileDocuments")
                        .HasForeignKey("CaseFileModelCaseFileNumber");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.CaseFileEnquiryLogModel", b =>
                {
                    b.HasOne("EBrief.Shared.Models.Data.CaseFileModel", null)
                        .WithMany("CfelEntries")
                        .HasForeignKey("CaseFileModelCaseFileNumber");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.CaseFileModel", b =>
                {
                    b.HasOne("EBrief.Shared.Models.Data.CourtListModel", null)
                        .WithMany("CaseFiles")
                        .HasForeignKey("CourtListModelId");

                    b.HasOne("EBrief.Shared.Models.Data.DefendantModel", "Defendant")
                        .WithMany()
                        .HasForeignKey("DefendantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EBrief.Shared.Models.Data.InformationModel", "Information")
                        .WithMany()
                        .HasForeignKey("InformationId");

                    b.Navigation("Defendant");

                    b.Navigation("Information");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.ChargeModel", b =>
                {
                    b.HasOne("EBrief.Shared.Models.Data.CaseFileModel", null)
                        .WithMany("Charges")
                        .HasForeignKey("CaseFileModelCaseFileNumber");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.HearingEntryModel", b =>
                {
                    b.HasOne("EBrief.Shared.Models.Data.CaseFileModel", null)
                        .WithMany("PreviousHearings")
                        .HasForeignKey("CaseFileModelCaseFileNumber");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.InformationModel", b =>
                {
                    b.OwnsMany("EBrief.Shared.Models.Data.InformationEntryModel", "Charges", b1 =>
                        {
                            b1.Property<int>("InformationModelId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Sequence")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("InformationModelId", "Id");

                            b1.ToTable("InformationEntryModel");

                            b1.WithOwner()
                                .HasForeignKey("InformationModelId");
                        });

                    b.Navigation("Charges");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.OccurrenceDocumentModel", b =>
                {
                    b.HasOne("EBrief.Shared.Models.Data.CaseFileModel", null)
                        .WithMany("OccurrenceDocuments")
                        .HasForeignKey("CaseFileModelCaseFileNumber");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.CaseFileModel", b =>
                {
                    b.Navigation("CaseFileDocuments");

                    b.Navigation("CfelEntries");

                    b.Navigation("Charges");

                    b.Navigation("OccurrenceDocuments");

                    b.Navigation("PreviousHearings");
                });

            modelBuilder.Entity("EBrief.Shared.Models.Data.CourtListModel", b =>
                {
                    b.Navigation("CaseFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
